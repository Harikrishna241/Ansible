- name: setting up the backend server
  hosts: localhost
  become: yes
  tasks:
  - name: disabling the default nodejs
    ansible.builtin.command: dnf module disable nodejs -y
  
  - name: enabling the default nodejs20
    ansible.builtin.command: dnf module enable nodejs:20 -y
  
  - name: installing the nodejs
    ansible.builtin.dnf:
      name: nodejs
      state: installed

  - name: Create a user 'expense' with a home directory
    ansible.builtin.user:
      name: expense
  
  - name: Create a directory if it does not exist
    ansible.builtin.file:
      path: /app
      state: directory
      mode: '0755'
      #here i need to create condition

  - name: Download backend code to tmp
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip
      mode: '0440'
  
  - name: Extract foo.tgz into /var/lib/foo
    ansible.builtin.unarchive:
      src: /tmp/backend.zip
      dest: /app
      remote_src: yes

  # - name: installing the npm modules
  #   ansible.builtin.dnf: npm install
  #   args:
  #     chdir: /app
  
  - name: Copy file with owner and permissions
    ansible.builtin.copy:
      src: /home/ec2-user/Ansible/expense/backend.service
      dest: /etc/systemd/system/backend.service

     # systemctl daemon-reload
  - name: this is for system deamon reload  
    ansible.builtin.systemd_service:
      state: restarted
      daemon_reload: true

  - name: enabling the backend service
    ansible.builtin.service:
      name: backend
      state: started
      enabled: yes

  - name: installation of mysql 
    ansible.builtin.dnf:
      name: mysql
      state: latest
  
  # - name: uploading the schema
  #   ansible.builtin.command: "mysql -h 54.161.92.9 -uroot -pExpenseApp@1 < /app/schema/backend.sql"
  - name: Dump all databases to hostname.sql including master data
    community.mysql.mysql_db:
      login_host: "db host adress"
      login_user: root
      login_password: ExpenseApp@1
      state: dump
  
  - name: restart the backend service
    ansible.builtin.service:
      name: backend
      state: restarted

      